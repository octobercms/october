<div
    data-control="formwidget"
    data-refresh-handler="<?= $this->getEventHandler('onRefresh') ?>"
    class="form-widget form-elements layout"
    role="form"
    id="<?= $this->getId() ?>">

    <?= $this->makePartial('form') ?>

</div>

<?php 
// Create empty array
$formFieldArray = [];

// Outside tabs
if ($outsideTabs->hasFields()) {
    foreach($outsideTabs->fields as $fields) {
        foreach($fields as $field) {
            $formFieldArray[] = "Form-field-$field->arrayName-$field->fieldName-group";
        }
    }
}

// Primary tabs
if ($primaryTabs->hasFields()) {
    foreach($primaryTabs->fields as $fields) {
        foreach($fields as $field) {
            $formFieldArray[] = "Form-field-$field->arrayName-$field->fieldName-group";
        }
    }
}

// Secondary tabs
if ($secondaryTabs->hasFields()) {
    foreach($secondaryTabs->fields as $fields) {
        foreach($fields as $field) {
            $formFieldArray[] = "Form-field-$field->arrayName-$field->fieldName-group";
        }
    }
}
?>

<script>
$(function() {

    "use strict";

    /*
     * Debounced resize function
     */
    var debounced;

    window.onresize = function() {
        clearTimeout(debounced);
        debounced = setTimeout(resetColumns, 100);
    };

    /*
     * Reset columns function
     */
    function resetColumns() {
        // Remove old third offset classes
        $(".form-group.span-third").removeClass("span-position-left");
        $(".form-group.span-third").removeClass("span-position-right");
        $(".form-group.span-third").removeClass("span-position-middle");
        // Remove old quarter offset classes
        $(".form-group.span-quarter").removeClass("span-position-left");
        $(".form-group.span-quarter").removeClass("span-position-right");
        $(".form-group.span-quarter").removeClass("span-position-middle");
        // Remove old three-quarters offset classes
        $(".form-group.span-three-quarters").removeClass("span-position-left");
        $(".form-group.span-three-quarters").removeClass("span-position-right");
        // Remove old right offset classes
        $(".form-group.span-right").removeClass("span-position-far-right");
        $(".form-group.span-right").removeClass("span-position-right");
        // Remove old left and auto offset classes
        $(".form-group.span-left").removeClass("span-position-left");
        $(".form-group.span-left").removeClass("span-position-right");
        // Now the resize columns
        resizeColumns();
    };

    /*
     * Resize columns function
     */
    function resizeColumns() {

        <?php foreach($formFieldArray as $formFields) { ?>

        // Parent widths
        var parentThird = $(".form-group.span-third#<?= e($formFields) ?>").parent().width(),
            parentQuarter = $(".form-group.span-quarter#<?= e($formFields) ?>").parent().width(),
            parentThreeQuarters = $(".form-group.span-three-quarters#<?= e($formFields) ?>").parent().width(),
            parentRight = $(".form-group.span-right#<?= e($formFields) ?>").parent().width(),
            parentLeft = $(".form-group.span-left#<?= e($formFields) ?>").parent().width();

        // Field left positions
        var thirdPosLeft = $(".form-group.span-third#<?= e($formFields) ?>").position(),
            quarterPosLeft = $(".form-group.span-quarter#<?= e($formFields) ?>").position(),
            threequartersPosLeft = $(".form-group.span-three-quarters#<?= e($formFields) ?>").position(),
            rightPosLeft = $(".form-group.span-right#<?= e($formFields) ?>").position(),
            leftPosLeft = $(".form-group.span-left#<?= e($formFields) ?>").position();

        // Field widths
        var thirdWidth = $(".form-group.span-third#<?= e($formFields) ?>").outerWidth(),
            quarterWidth = $(".form-group.span-quarter#<?= e($formFields) ?>").outerWidth();

        // Process third fields
        if (typeof parentThird !== "undefined" && typeof thirdPosLeft !== "undefined") {
            // Calculate right position for third
            var thirdPosRight = Number(thirdPosLeft.left) + Number(thirdWidth);
            // Calculate percentage positions for third
            var percentThirdLeft = (100 / parentThird) * thirdPosLeft.left,
                percentThirdRight = (100 / parentThird) * thirdPosRight;
            // Add left offset class
            if (percentThirdLeft < 20) {
                $(".form-group.span-third#<?= e($formFields) ?>").addClass("span-position-left");
            } else if (percentThirdRight > 80) {
                $(".form-group.span-third#<?= e($formFields) ?>").addClass("span-position-right");
            } else {
                $(".form-group.span-third#<?= e($formFields) ?>").addClass("span-position-middle");
            }
        }

        // Process quarter fields
        if (typeof parentQuarter !== "undefined" && typeof quarterPosLeft !== "undefined") {
            // Calculate quarter right position
            var quarterPosRight = Number(quarterPosLeft.left) + Number(quarterWidth);
            // Calculate percentage positions for quarter
            var percentQuarterLeft = (100 / parentQuarter) * quarterPosLeft.left,
                percentQuarterRight = (100 / parentQuarter) * quarterPosRight;
            // Add left offset class
            if (percentQuarterLeft < 20) {
                $(".form-group.span-quarter#<?= e($formFields) ?>").addClass("span-position-left");
            } else if (percentQuarterRight > 80) {
                $(".form-group.span-quarter#<?= e($formFields) ?>").addClass("span-position-right");
            } else {
                $(".form-group.span-quarter#<?= e($formFields) ?>").addClass("span-position-middle");
            }
        }

        // Process three-quarters fields
        if (typeof parentThreeQuarters !== "undefined" && typeof threequartersPosLeft !== "undefined") {
            // Calculate percentage positions for three-quarters
            var percentThreeQuartersLeft = (100 / parentThreeQuarters) * threequartersPosLeft.left;
            // Add left offset class
            if (percentThreeQuartersLeft < 20) {
                $(".form-group.span-three-quarters#<?= e($formFields) ?>").addClass("span-position-left");
            } else {
                $(".form-group.span-three-quarters#<?= e($formFields) ?>").addClass("span-position-right");
            }
        }

        // Process right fields
        if (typeof parentRight !== "undefined" && typeof rightPosLeft !== "undefined") {
            // Calculate percentage positions for right
            var percentRightLeft = (100 / parentRight) * rightPosLeft.left;
            // Add left offset class
            if (percentRightLeft < 20) {
                $(".form-group.span-right#<?= e($formFields) ?>").addClass("span-position-far-right");
            } else {
                $(".form-group.span-right#<?= e($formFields) ?>").addClass("span-position-right");
            }
        }

        // Process left and auto fields
        if (typeof parentLeft !== "undefined" && typeof leftPosLeft !== "undefined") {
            // Calculate percentage positions for right
            var percentLeft = (100 / parentLeft) * leftPosLeft.left;
            // Add left offset class
            if (percentLeft < 20) {
                $(".form-group.span-left#<?= e($formFields) ?>").addClass("span-position-left");
            } else {
                $(".form-group.span-left#<?= e($formFields) ?>").addClass("span-position-right");
            }
        }

        <?php } ?>

    }

    // Run the resize columns function for the first time
    resizeColumns();

    /*
     * Stretch for partial fields
     */
    var $textareaHeight = $(".form-group.partial-field .stretch").parent().outerHeight(),
        $textareaParentHeight = $(".form-group.partial-field .stretch").closest('.partial-field').parent().height(),
        $textareaParentContainer = $(".form-group.partial-field .stretch").closest('.stretch-parent').height();

    // Only run if not empty
    if(($textareaParentContainer || $textareaParentContainer === 0)  &&  ($textareaParentHeight || $textareaParentHeight === 0) && ($textareaHeight || $textareaHeight === 0)) {
        $stretchHeight = ($textareaParentContainer - 30) - ($textareaParentHeight - $textareaHeight);
    }
    if (typeof $stretchHeight !== "undefined") {
        $(".form-group.partial-field .stretch").css("height", $stretchHeight + 'px');
    }

});
</script>
